stages:
  - build
  - deploy
  #- analyze
variables:
  NODE_OPTIONS: --openssl-legacy-provider
#sonarqube-check:
#  stage: analyze
#  image:
#    name: sonarsource/sonar-scanner-cli:latest
#    entrypoint: [""]
#  needs: []
#  dependencies: []
#  variables:
#    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
#    #SONAR_PROJECT_BASE_DIR: "${CI_PROJECT_DIR}"
#    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
#  cache:
#    key: "${CI_JOB_NAME}"
#    paths:
#      - .sonar/cache
#  script:
#    - sonar-scanner -Dsonar.qualitygate.wait=true
#  allow_failure: true
#  only:
# #   - merge_requests
#    - master
##    - develop

build:
  stage: build
  image: node:lts
  script:
      - apt update
      - npm install -g @angular/cli
      - npm install
      - ng build --prod
      - echo "BUILD SUCCESSFUL"
  artifacts:
    expire_in: 1 day
    paths:
      - dist/

deploy:
  image: alpine
  stage: deploy
  dependencies:
      - build
  artifacts:
    expire_in: 1 day
    paths:
      - dist/
  before_script:
    - apk add --no-cache rsync openssh
    - mkdir -p ~/.ssh
    - echo "$A2_SSH_PRIVATE_KEY" >> ~/.ssh/id_dsa
    - chmod 600 ~/.ssh/id_dsa
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  only:
    - master
  environment:
    name: production
    url: https://mazad-dashboard.smartlaboman.com

  script:
    - current_dir=$(pwd)
    - rsync -rav --rsh='ssh -v -p7822' $current_dir/dist/mazad-oman-dashboard/ $A2_SSH_USERNAME@$A2_HOST_NAME:$PROJECT_PATH
