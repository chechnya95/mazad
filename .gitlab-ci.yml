# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence

stages:
- build
- deploy
#- test

build-image:
  stage: build
  image: docker:latest
  only:
    - master
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay
    ENV_VARIABLE: "production"
  
  rules:
    - if: '$CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH'
      variables:
        ENV_VARIABLE: "staging"
  
  before_script:
    # Login to Google Container Registry
    - base64 -d $GCP_SA_KEY | docker login -u _json_key --password-stdin https://gcr.io
    # Login to Gitlab container Registry
    #- echo $CI_JOB_TOKEN | docker login -u gitlab-ci-token $CI_REGISTRY --password-stdin

  script:
    # Build and tag image for both GCR and Gitlab registries
    - docker build --tag gcr.io/$PROJECT_ID/$CI_PROJECT_NAME:latest --tag $CI_PROJECT_NAME:latest --build-arg CONFIG_ENV=$ENV_VARIABLE .
    # Push image to GCR
    - docker push gcr.io/$PROJECT_ID/$CI_PROJECT_NAME:latest
    # Push image to Gitlab registry
    #- docker push $CI_REGISTRY_IMAGE:latest

build:
  stage: build
  image: node:16
  only:
    - master
  script:
  - apt update
  - npm install --location=global @angular/cli
  - npm install
  - ng build --configuration production
  - echo "BUILD SUCCESSFUL"
  artifacts:
    expire_in: 1 day
    paths:
    - dist/
deploy:
  image: alpine
  stage: deploy
  dependencies:
  - build
  artifacts:
    expire_in: 1 day
    paths:
    - dist/
  before_script:
  - apk add --no-cache rsync openssh
  - mkdir -p ~/.ssh
  - echo "$A2_SSH_PRIVATE_KEY" >> ~/.ssh/id_dsa
  - chmod 600 ~/.ssh/id_dsa
  - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  only:
    - master
  environment:
    name: production
    url: https://mazad-dashboard.smartlaboman.com
  script:
  - current_dir=$(pwd)
  - rsync -rav --rsh='ssh -v -p7822' $current_dir/dist/mazad-oman-dashboard/ $A2_SSH_USERNAME@$A2_HOST_NAME:$PROJECT_PATH

#sast:
#  stage: test
#  rules:
#    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
#include:
#- template: Security/SAST.gitlab-ci.yml
